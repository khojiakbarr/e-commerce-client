Project Structure
graphql
Копировать код
client/
  ├── public/                 # Static public files
  ├── src/
      ├── components/         # Reusable UI components (Navbar, LoginForm, etc.)
      ├── pages/              # Application pages (Home, AdminPanel, Login, etc.)
      ├── services/           # API service files (authService, productService)
      ├── App.js              # Main application entry point
      ├── index.js            # React entry point
      └── styles/             # Global styles (if needed)
1. Install Required Packages
Run the following command to install React and required dependencies:

bash
Копировать код
npx create-react-app client
cd client
npm install axios react-router-dom @mui/material @emotion/react @emotion/styled
2. File Implementations
src/index.js
javascript
Копировать код
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from 'react-router-dom';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <BrowserRouter>
    <App />
  </BrowserRouter>
);
src/App.js
javascript
Копировать код
import React from 'react';
import { Routes, Route } from 'react-router-dom';
import HomePage from './pages/HomePage';
import LoginPage from './pages/LoginPage';
import AdminPanel from './pages/AdminPanel';
import ProductPage from './pages/ProductPage';
import Navbar from './components/Navbar';

function App() {
  return (
    <div>
      <Navbar />
      <Routes>
        <Route path="/" element={<HomePage />} />
        <Route path="/login" element={<LoginPage />} />
        <Route path="/admin" element={<AdminPanel />} />
        <Route path="/product/:id" element={<ProductPage />} />
      </Routes>
    </div>
  );
}

export default App;
src/components/Navbar.js
javascript
Копировать код
import React from 'react';
import { Link } from 'react-router-dom';
import { AppBar, Toolbar, Button } from '@mui/material';

const Navbar = () => {
  return (
    <AppBar position="static">
      <Toolbar>
        <Button color="inherit" component={Link} to="/">Home</Button>
        <Button color="inherit" component={Link} to="/login">Login</Button>
        <Button color="inherit" component={Link} to="/admin">Admin Panel</Button>
      </Toolbar>
    </AppBar>
  );
};

export default Navbar;
src/pages/HomePage.js
javascript
Копировать код
import React, { useEffect, useState } from 'react';
import ProductList from '../components/ProductList';
import productService from '../services/productService';

const HomePage = () => {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    productService.getProducts().then((response) => setProducts(response.data));
  }, []);

  return (
    <div>
      <h1>Welcome to Our Online Store</h1>
      <ProductList products={products} />
    </div>
  );
};

export default HomePage;
src/pages/LoginPage.js
javascript
Копировать код
import React, { useState } from 'react';
import authService from '../services/authService';

const LoginPage = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (e) => {
    e.preventDefault();
    try {
      const response = await authService.login({ email, password });
      console.log('User logged in:', response.data);
    } catch (error) {
      console.error('Login failed:', error.response.data);
    }
  };

  return (
    <form onSubmit={handleLogin}>
      <h2>Login</h2>
      <input
        type="email"
        placeholder="Email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
      />
      <input
        type="password"
        placeholder="Password"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
      />
      <button type="submit">Login</button>
    </form>
  );
};

export default LoginPage;
src/pages/AdminPanel.js
javascript
Копировать код
import React, { useEffect, useState } from 'react';
import productService from '../services/productService';

const AdminPanel = () => {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    productService.getProducts().then((response) => setProducts(response.data));
  }, []);

  return (
    <div>
      <h1>Admin Panel</h1>
      <button>Add New Product</button>
      <ul>
        {products.map((product) => (
          <li key={product._id}>{product.name}</li>
        ))}
      </ul>
    </div>
  );
};

export default AdminPanel;
src/components/ProductList.js
javascript
Копировать код
import React from 'react';
import { Link } from 'react-router-dom';

const ProductList = ({ products }) => {
  return (
    <ul>
      {products.map((product) => (
        <li key={product._id}>
          <Link to={`/product/${product._id}`}>{product.name}</Link>
        </li>
      ))}
    </ul>
  );
};

export default ProductList;
src/pages/ProductPage.js
javascript
Копировать код
import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import productService from '../services/productService';

const ProductPage = () => {
  const { id } = useParams();
  const [product, setProduct] = useState(null);

  useEffect(() => {
    productService.getProductById(id).then((response) => setProduct(response.data));
  }, [id]);

  return (
    <div>
      {product ? (
        <>
          <h1>{product.name}</h1>
          <p>{product.description}</p>
          <p>Price: ${product.price}</p>
        </>
      ) : (
        <p>Loading product details...</p>
      )}
    </div>
  );
};

export default ProductPage;
3. Services (API Requests)
src/services/authService.js
javascript
Копировать код
import axios from 'axios';

const API_URL = 'http://localhost:5000/api/auth';

const login = (credentials) => axios.post(`${API_URL}/login`, credentials);
const register = (user) => axios.post(`${API_URL}/register`, user);

export default {
  login,
  register,
};
src/services/productService.js
javascript
Копировать код
import axios from 'axios';

const API_URL = 'http://localhost:5000/api/products';

const getProducts = () => axios.get(API_URL);
const getProductById = (id) => axios.get(`${API_URL}/${id}`);
const addProduct = (product) => axios.post(API_URL, product);

export default {
  getProducts,
  getProductById,
  addProduct,
};
4. Summary of Key Features
Home Page: Displays a list of products.
Login Page: Allows users to log in with email/password.
Admin Panel: Allows the admin to manage products.
Product Details: View the details of a specific product.
5. Important Notes
Authentication: Users are authenticated with JWT, and the token is stored in localStorage or sessionStorage.
Admin Panel: Restricted only to users with admin roles.
Responsive Design: MUI components ensure that the layout is responsive.
